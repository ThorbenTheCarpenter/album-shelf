{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\jolej\\\\Documents\\\\GitHub\\\\react_file_uploader\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\jolej\\\\Documents\\\\GitHub\\\\react_file_uploader\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\jolej\\\\Documents\\\\GitHub\\\\react_file_uploader\\\\client\\\\src\\\\pages\\\\Forms\\\\FileUpload.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nvar FileUpload = function FileUpload() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      file = _useState2[0],\n      setFile = _useState2[1];\n\n  var _useState3 = useState('Choose File'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      filename = _useState4[0],\n      setFilename = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      uploadedFile = _useState6[0],\n      setUploadedFile = _useState6[1];\n\n  var onChange = function onChange(e) {\n    setFile(e.target.files[0]);\n    setFilename(e.target.files[0].name);\n  };\n\n  var onSubmit = function onSubmit(e) {\n    var formData, res, _res$data, fileName, filePath;\n\n    return _regeneratorRuntime.async(function onSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            e.preventDefault();\n            formData = new FormData();\n            formData.append('file', file);\n            _context.prev = 3;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(axios.post('/upload', formData, {\n              headers: {\n                'Content-Type': 'multipart/form-data'\n              }\n            }));\n\n          case 6:\n            res = _context.sent;\n            _res$data = res.data, fileName = _res$data.fileName, filePath = _res$data.filePath;\n            setUploadedFile({\n              fileName: fileName,\n              filePath: filePath\n            });\n            _context.next = 14;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](3);\n\n            if (_context.t0.response.status === 500) {\n              console.log('There was a problem with the server');\n            } else {\n              console.log(_context.t0.response.data.msg);\n            }\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[3, 11]]);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"file\",\n    id: \"customFile\",\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"customFile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, filename)), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Upload\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })));\n};\n\nexport default FileUpload;","map":{"version":3,"sources":["C:/Users/jolej/Documents/GitHub/react_file_uploader/client/src/pages/Forms/FileUpload.js"],"names":["React","useState","axios","FileUpload","file","setFile","filename","setFilename","uploadedFile","setUploadedFile","onChange","e","target","files","name","onSubmit","preventDefault","formData","FormData","append","post","headers","res","data","fileName","filePath","response","status","console","log","msg"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAAA,kBACCF,QAAQ,CAAC,EAAD,CADT;AAAA;AAAA,MAChBG,IADgB;AAAA,MACVC,OADU;;AAAA,mBAESJ,QAAQ,CAAC,aAAD,CAFjB;AAAA;AAAA,MAEhBK,QAFgB;AAAA,MAENC,WAFM;;AAAA,mBAGiBN,QAAQ,CAAC,EAAD,CAHzB;AAAA;AAAA,MAGhBO,YAHgB;AAAA,MAGFC,eAHE;;AAKvB,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,CAAC,EAAI;AACpBN,IAAAA,OAAO,CAACM,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAD,CAAP;AACAN,IAAAA,WAAW,CAACI,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,EAAkBC,IAAnB,CAAX;AACD,GAHD;;AAKA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAMJ,CAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AACfA,YAAAA,CAAC,CAACK,cAAF;AACMC,YAAAA,QAFS,GAEE,IAAIC,QAAJ,EAFF;AAGfD,YAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBf,IAAxB;AAHe;AAAA;AAAA,6CAMKF,KAAK,CAACkB,IAAN,CAAW,SAAX,EAAsBH,QAAtB,EAAgC;AAChDI,cAAAA,OAAO,EAAE;AACP,gCAAgB;AADT;AADuC,aAAhC,CANL;;AAAA;AAMPC,YAAAA,GANO;AAAA,wBAYkBA,GAAG,CAACC,IAZtB,EAYLC,QAZK,aAYLA,QAZK,EAYKC,QAZL,aAYKA,QAZL;AAcbhB,YAAAA,eAAe,CAAC;AAAEe,cAAAA,QAAQ,EAARA,QAAF;AAAYC,cAAAA,QAAQ,EAARA;AAAZ,aAAD,CAAf;AAda;AAAA;;AAAA;AAAA;AAAA;;AAiBb,gBAAI,YAAIC,QAAJ,CAAaC,MAAb,KAAwB,GAA5B,EAAiC;AAC/BC,cAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ;AACD,aAFD,MAEO;AACLD,cAAAA,OAAO,CAACC,GAAR,CAAY,YAAIH,QAAJ,CAAaH,IAAb,CAAkBO,GAA9B;AACD;;AArBY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAyBA,SACE,0CACE;AAAM,IAAA,QAAQ,EAAEf,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,EAAE,EAAC,YAFL;AAGE,IAAA,QAAQ,EAAEL,QAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME;AAAO,IAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,QADH,CANF,CADF,EAYE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,KAAK,EAAC,QAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CADF,CADF;AAqBD,CAxDD;;AA0DA,eAAeH,UAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst FileUpload = () => {\r\n  const [file, setFile] = useState('');\r\n  const [filename, setFilename] = useState('Choose File');\r\n  const [uploadedFile, setUploadedFile] = useState({});\r\n\r\n  const onChange = e => {\r\n    setFile(e.target.files[0]);\r\n    setFilename(e.target.files[0].name); \r\n  };\r\n\r\n  const onSubmit = async e => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n\r\n    try {\r\n      const res = await axios.post('/upload', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        },\r\n      });\r\n\r\n      const { fileName, filePath } = res.data;\r\n\r\n      setUploadedFile({ fileName, filePath });\r\n\r\n    } catch (err) {\r\n      if (err.response.status === 500) {\r\n        console.log('There was a problem with the server');\r\n      } else {\r\n        console.log(err.response.data.msg);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit}>\r\n        <div>\r\n          <input\r\n            type='file'\r\n            id='customFile'\r\n            onChange={onChange}\r\n          />\r\n          <label htmlFor='customFile'>\r\n            {filename}\r\n          </label>\r\n        </div>\r\n\r\n        <input\r\n          type='submit'\r\n          value='Upload'\r\n        />\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FileUpload;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\jolej\\\\Documents\\\\GitHub\\\\album-shelf\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\jolej\\\\Documents\\\\GitHub\\\\album-shelf\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\jolej\\\\Documents\\\\GitHub\\\\album-shelf\\\\client\\\\src\\\\pages\\\\Forms\\\\EditForm.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Formik, FieldArray } from \"formik\";\nimport { validationSchema } from \"./helpers/validation\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Error from \"./helpers/Error\";\nimport FileUpload from \"./helpers/FileUpload\";\nimport MapList from \"./helpers/MapList\";\nexport default function EditForm() {\n  var history = useHistory();\n  var UserId = parseInt(useParams().id);\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      results = _useState2[0],\n      setResults = _useState2[1];\n\n  useEffect(function () {\n    var fetchData = function fetchData() {\n      var result;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(axios(\"http://localhost:3007/albums/\" + UserId));\n\n            case 2:\n              result = _context.sent;\n              setResults(result.data);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    };\n\n    fetchData();\n  }, []);\n\n  var _FileUpload = FileUpload(),\n      onSubmitUpload = _FileUpload.onSubmitUpload,\n      onchangeUpload = _FileUpload.onchangeUpload,\n      filename = _FileUpload.filename,\n      uploaded = _FileUpload.uploaded;\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Formik, {\n    enableReinitialize: true,\n    initialValues: {\n      artist: results.artist,\n      title: results.title,\n      description: results.description,\n      year: results.date,\n      image: results.image,\n      track: results.track,\n      tracks: results.tracks\n    },\n    validationSchema: validationSchema,\n    onSubmit: function onSubmit(values, _ref) {\n      var setSubmitting = _ref.setSubmitting;\n      setSubmitting(true);\n      fetch(\"http://localhost:3007/albums/\" + UserId, {\n        method: \"PUT\",\n        headers: {\n          Accept: \"application/json\",\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          artist: values.artist,\n          title: values.title,\n          description: values.description,\n          image: \"/uploads/\" + filename,\n          year: values.year,\n          tracks: values.tracks\n        })\n      });\n      onSubmitUpload();\n      history.push(\"/\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, function (_ref2) {\n    var values = _ref2.values,\n        errors = _ref2.errors,\n        touched = _ref2.touched,\n        handleChange = _ref2.handleChange,\n        handleBlur = _ref2.handleBlur,\n        handleSubmit = _ref2.handleSubmit,\n        isSubmitting = _ref2.isSubmitting;\n    return React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"cover_photo\",\n      src: values.image,\n      alt: \"No image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"forms\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"title_form\",\n      onBlur: handleBlur,\n      type: \"text\",\n      id: \"title\",\n      name: \"title\",\n      value: values.title,\n      onChange: handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(Error, {\n      touched: touched.title,\n      message: errors.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"artist_name_form\",\n      onBlur: handleBlur,\n      type: \"text\",\n      id: \"artist\",\n      name: \"artist\",\n      value: values.artist,\n      onChange: handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(Error, {\n      touched: touched.artist,\n      message: errors.artist,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(\"textarea\", {\n      name: \"description\",\n      id: \"description\",\n      onBlur: handleBlur,\n      value: values.description,\n      onChange: handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(Error, {\n      touched: touched.description,\n      message: errors.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"date_of_release\",\n      placeholder: \"Date of album's release\",\n      id: \"year\",\n      name: \"year\",\n      type: \"text\",\n      value: values.quantity,\n      onChange: handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(Error, {\n      touched: touched.year,\n      message: errors.year,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"tracks_label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Tracks: \"), React.createElement(FieldArray, {\n      id: \"tracks\",\n      name: \"tracks\",\n      type: \"text\",\n      value: values.tracks,\n      onChange: handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, function (_ref3) {\n      var push = _ref3.push;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"addTrack_button\",\n        type: \"reset\",\n        onClick: function onClick() {\n          return push(values.track);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"Add\"), React.createElement(\"input\", {\n        className: \"addTrack_form\",\n        placeholder: \"Track's name\",\n        type: \"text\",\n        id: \"track\",\n        name: \"track\",\n        values: values.track,\n        onChange: handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }));\n    }), React.createElement(Error, {\n      touched: touched.tracks,\n      message: errors.tracks,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }), React.createElement(MapList, {\n      tracks: values.track,\n      id: UserId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }), React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"addPhoto_button\",\n      type: \"file\",\n      name: \"image\",\n      id: \"image\",\n      accept: \"image/*\",\n      onChange: onchangeUpload,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }), uploaded ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, \"Cover uploaded!\") : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"Upload a Cover!\"))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"submitbutton\",\n      type: \"submit\",\n      disabled: isSubmitting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \"Submit!\"), React.createElement(\"button\", {\n      className: \"submitbutton\",\n      onClick: function onClick() {\n        return history.push(\"/\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \" Go back! \")));\n  }));\n}","map":{"version":3,"sources":["C:/Users/jolej/Documents/GitHub/album-shelf/client/src/pages/Forms/EditForm.js"],"names":["React","useState","useEffect","axios","Formik","FieldArray","validationSchema","useHistory","useParams","Error","FileUpload","MapList","EditForm","history","UserId","parseInt","id","results","setResults","fetchData","result","data","onSubmitUpload","onchangeUpload","filename","uploaded","artist","title","description","year","date","image","track","tracks","values","setSubmitting","fetch","method","headers","Accept","body","JSON","stringify","push","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","quantity"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Formik, FieldArray } from \"formik\";\r\nimport { validationSchema } from \"./helpers/validation\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport Error from \"./helpers/Error\";\r\nimport FileUpload from \"./helpers/FileUpload\";\r\nimport MapList from \"./helpers/MapList\";\r\n\r\nexport default function EditForm() {\r\n  const history = useHistory();\r\n  const UserId = parseInt(useParams().id);\r\n  const [results, setResults] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const result = await axios(\"http://localhost:3007/albums/\" + UserId);\r\n      setResults(result.data);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const { onSubmitUpload, onchangeUpload, filename, uploaded } = FileUpload();\r\n\r\n  return (\r\n    <div>\r\n      <Formik\r\n        enableReinitialize\r\n        initialValues={{\r\n          artist: results.artist,\r\n          title: results.title,\r\n          description: results.description,\r\n          year: results.date,\r\n          image: results.image,\r\n          track: results.track,\r\n          tracks: results.tracks\r\n        }}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(values, { setSubmitting }) => {\r\n          setSubmitting(true);\r\n          fetch(\"http://localhost:3007/albums/\" + UserId, {\r\n            method: \"PUT\",\r\n            headers: {\r\n              Accept: \"application/json\",\r\n              \"content-type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n              artist: values.artist,\r\n              title: values.title,\r\n              description: values.description,\r\n              image: \"/uploads/\" + filename,\r\n              year: values.year,\r\n              tracks: values.tracks\r\n            })\r\n          });\r\n          onSubmitUpload();\r\n          history.push(\"/\");\r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          isSubmitting,\r\n        }) => (\r\n          <form onSubmit={handleSubmit}>\r\n              \r\n              \r\n              <img className='cover_photo' src={values.image} alt=\"No image\" />\r\n            <div className='forms'>\r\n              <br />\r\n\r\n\r\n              {/* Title */}\r\n\r\n\r\n              <input\r\n                className=\"title_form\"\r\n                onBlur={handleBlur}\r\n                type=\"text\"\r\n                id=\"title\"\r\n                name=\"title\"\r\n                value={values.title}\r\n                onChange={handleChange}\r\n              />\r\n              <Error touched={touched.title} message={errors.title} />\r\n              <br />\r\n\r\n              {/* Artist name */}\r\n\r\n              <input\r\n                className=\"artist_name_form\"\r\n                onBlur={handleBlur}\r\n                type=\"text\"\r\n                id=\"artist\"\r\n                name=\"artist\"\r\n                value={values.artist}\r\n                onChange={handleChange}\r\n              />\r\n              <Error touched={touched.artist} message={errors.artist} />\r\n              <br />\r\n              \r\n\r\n              {/* Description */}\r\n\r\n              <textarea\r\n                name=\"description\"\r\n                id=\"description\"\r\n                onBlur={handleBlur}\r\n                value={values.description}\r\n                onChange={handleChange}\r\n              />\r\n              <Error\r\n                touched={touched.description}\r\n                message={errors.description}\r\n              />\r\n              <br />\r\n\r\n              {/* Year of release */}\r\n\r\n              <input\r\n                className=\"date_of_release\"\r\n                placeholder=\"Date of album's release\"\r\n                id=\"year\"\r\n                name=\"year\"\r\n                type=\"text\"\r\n                value={values.quantity}\r\n                onChange={handleChange}\r\n              />\r\n              <Error touched={touched.year} message={errors.year} />\r\n\r\n              {/* Tracks */}\r\n\r\n              <label className=\"tracks_label\">Tracks: </label>\r\n              <FieldArray\r\n                id=\"tracks\"\r\n                name=\"tracks\"\r\n                type=\"text\"\r\n                value={values.tracks}\r\n                onChange={handleChange}\r\n              >\r\n                {({ push }) => (\r\n                  <div>\r\n                    <button\r\n                      className=\"addTrack_button\"\r\n                      type=\"reset\"\r\n                      onClick={() => push(values.track)}\r\n                    >\r\n                      Add\r\n                    </button>\r\n                    <input\r\n                      className='addTrack_form'\r\n                      placeholder=\"Track's name\"\r\n                      type=\"text\"\r\n                      id=\"track\"\r\n                      name=\"track\"\r\n                      values={values.track}\r\n                      onChange={handleChange}\r\n                    />\r\n                  </div>\r\n                )}\r\n              </FieldArray>\r\n              <Error touched={touched.tracks} message={errors.tracks} />\r\n              <MapList tracks={values.track} id={UserId}/>\r\n\r\n              {/* PHOTO */}\r\n\r\n              <>\r\n                <div>\r\n                  <input\r\n                    className=\"addPhoto_button\"\r\n                    type=\"file\"\r\n                    name=\"image\"\r\n                    id=\"image\"\r\n                    accept=\"image/*\"\r\n                    onChange={onchangeUpload}\r\n                  />\r\n                  {uploaded ? (\r\n                    <div>Cover uploaded!</div>\r\n                    ) : (\r\n                      <div>Upload a Cover!</div>\r\n                  )}\r\n                </div>\r\n              </>\r\n              <br />\r\n\r\n              {/* Submit button */}\r\n\r\n              <button\r\n                className=\"submitbutton\"\r\n                type=\"submit\"\r\n                disabled={isSubmitting}\r\n              >\r\n                Submit!\r\n              </button>\r\n\r\n              <button className='submitbutton' onClick={()=> history.push(\"/\")}> Go back! </button>\r\n            </div>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\jolej\\\\Documents\\\\GitHub\\\\album-shelf\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\jolej\\\\Documents\\\\GitHub\\\\album-shelf\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\jolej\\\\Documents\\\\GitHub\\\\album-shelf\\\\client\\\\src\\\\pages\\\\Forms\\\\EditForm.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Formik, FieldArray } from \"formik\";\nimport { validationSchema } from \"./helpers/validation\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Error from \"./helpers/Error\";\nimport FileUpload from \"./helpers/FileUpload\";\nimport MapList from \"./helpers/MapList\";\nimport { IoIosArrowBack, IoIosCheckmark } from \"react-icons/io\";\nexport default function EditForm(props) {\n  var history = useHistory();\n  var UserId = parseInt(useParams().id);\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      results = _useState2[0],\n      setResults = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showTracks = _useState4[0],\n      setShowTracks = _useState4[1];\n\n  useEffect(function () {\n    var fetchData = function fetchData() {\n      var result;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(axios(\"http://localhost:3007/albums/\" + UserId));\n\n            case 2:\n              result = _context.sent;\n              setResults(result.data);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    };\n\n    fetchData();\n  }, [UserId, results.image]);\n\n  var _FileUpload = FileUpload(),\n      onSubmitUpload = _FileUpload.onSubmitUpload,\n      onchangeUpload = _FileUpload.onchangeUpload,\n      filename = _FileUpload.filename,\n      uploaded = _FileUpload.uploaded;\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Formik, {\n    enableReinitialize: true,\n    initialValues: {\n      artist: results.artist,\n      title: results.title,\n      description: results.description,\n      year: results.date,\n      image: results.image,\n      track: results.track,\n      tracks: results.tracks\n    },\n    validationSchema: validationSchema,\n    onSubmit: function onSubmit(values, _ref) {\n      var setSubmitting = _ref.setSubmitting;\n      setSubmitting(true);\n      fetch(\"http://localhost:3007/albums/\" + UserId, {\n        method: \"PUT\",\n        headers: {\n          Accept: \"application/json\",\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          artist: values.artist,\n          title: values.title,\n          description: values.description,\n          image: values.image,\n          year: values.year,\n          tracks: values.tracks\n        })\n      });\n      onSubmitUpload();\n      history.push(\"/\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, function (_ref2) {\n    var values = _ref2.values,\n        errors = _ref2.errors,\n        touched = _ref2.touched,\n        handleChange = _ref2.handleChange,\n        handleBlur = _ref2.handleBlur,\n        handleSubmit = _ref2.handleSubmit,\n        isSubmitting = _ref2.isSubmitting;\n    return React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"forms\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"cover_photo\",\n      src: uploaded ? values.image : results.image,\n      alt: \"No File\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"artist_name_form\",\n      onBlur: handleBlur,\n      placeholder: \"Artist's name\",\n      type: \"text\",\n      id: \"artist\",\n      name: \"artist\",\n      value: values.artist,\n      onChange: handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(Error, {\n      touched: touched.artist,\n      message: errors.artist,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"title_form\",\n      onBlur: handleBlur,\n      placeholder: \"Album's title\",\n      type: \"text\",\n      id: \"title\",\n      name: \"title\",\n      value: values.title,\n      onChange: handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(Error, {\n      touched: touched.title,\n      message: errors.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(\"textarea\", {\n      name: \"description\",\n      id: \"description\",\n      placeholder: \"Album's description\",\n      onBlur: handleBlur,\n      value: values.description,\n      onChange: handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(Error, {\n      touched: touched.description,\n      message: errors.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"date_of_release\",\n      placeholder: \"Date of album's release\",\n      id: \"year\",\n      name: \"year\",\n      type: \"text\",\n      value: values.quantity,\n      onChange: handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(Error, {\n      touched: touched.year,\n      message: errors.year,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"submitbuttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"submitbutton\",\n      onClick: function onClick() {\n        return history.push(\"/\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(IoIosArrowBack, {\n      className: \"backIcon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"submitbutton\",\n      type: \"submit\",\n      disabled: isSubmitting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(IoIosCheckmark, {\n      className: \"submitIcon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }))), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: function onClick() {\n        return setShowTracks(!showTracks);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Show Tracks\"), showTracks ? React.createElement(\"div\", {\n      className: \"tracks_div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"tracks_label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Tracks: \"), React.createElement(FieldArray, {\n      id: \"tracks\",\n      name: \"tracks\",\n      type: \"text\",\n      value: values.tracks,\n      onChange: handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, function (_ref3) {\n      var push = _ref3.push;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"addTrack_button\",\n        type: \"reset\",\n        onClick: function onClick() {\n          return push(values.track);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"Add\"), React.createElement(\"input\", {\n        className: \"addTrack_form\",\n        placeholder: \"Track's name\",\n        type: \"text\",\n        id: \"track\",\n        name: \"track\",\n        values: values.track,\n        onChange: handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }));\n    }), React.createElement(Error, {\n      touched: touched.tracks,\n      message: errors.tracks,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }), React.createElement(MapList, {\n      id: UserId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    })) : null, \";\", React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"addPhoto_button\",\n      type: \"file\",\n      name: \"image\",\n      id: \"image\",\n      accept: \"image/*\",\n      onChange: onchangeUpload,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }), uploaded ? values.image = \"/uploads/\" + filename : values.image = results.image, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }), values.image)), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    })));\n  }));\n}","map":{"version":3,"sources":["C:/Users/jolej/Documents/GitHub/album-shelf/client/src/pages/Forms/EditForm.js"],"names":["React","useState","useEffect","axios","Formik","FieldArray","validationSchema","useHistory","useParams","Error","FileUpload","MapList","IoIosArrowBack","IoIosCheckmark","EditForm","props","history","UserId","parseInt","id","results","setResults","showTracks","setShowTracks","fetchData","result","data","image","onSubmitUpload","onchangeUpload","filename","uploaded","artist","title","description","year","date","track","tracks","values","setSubmitting","fetch","method","headers","Accept","body","JSON","stringify","push","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","quantity"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Formik, FieldArray } from \"formik\";\r\nimport { validationSchema } from \"./helpers/validation\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport Error from \"./helpers/Error\";\r\nimport FileUpload from \"./helpers/FileUpload\";\r\nimport MapList from \"./helpers/MapList\";\r\nimport { IoIosArrowBack, IoIosCheckmark } from \"react-icons/io\";\r\n\r\nexport default function EditForm(props) {\r\n  const history = useHistory();\r\n  const UserId = parseInt(useParams().id);\r\n    const [results, setResults] = useState(\"\");\r\n  const [showTracks, setShowTracks] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const result = await axios(\"http://localhost:3007/albums/\" + UserId);\r\n      setResults(result.data);\r\n    };\r\n    fetchData();\r\n  }, [UserId, results.image]);\r\n\r\n  const { onSubmitUpload, onchangeUpload, filename, uploaded } = FileUpload();\r\n\r\n  return (\r\n    <div>\r\n      <Formik\r\n        enableReinitialize\r\n        initialValues={{\r\n          artist: results.artist,\r\n          title: results.title,\r\n          description: results.description,\r\n          year: results.date,\r\n          image: results.image,\r\n          track: results.track,\r\n          tracks: results.tracks\r\n        }}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(values, { setSubmitting }) => {\r\n          setSubmitting(true);\r\n          fetch(\"http://localhost:3007/albums/\" + UserId, {\r\n            method: \"PUT\",\r\n            headers: {\r\n              Accept: \"application/json\",\r\n              \"content-type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n              artist: values.artist,\r\n              title: values.title,\r\n              description: values.description,\r\n              image: values.image,\r\n              year: values.year,\r\n              tracks: values.tracks\r\n            })\r\n          });\r\n          onSubmitUpload();\r\n          history.push(\"/\");\r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          isSubmitting\r\n        }) => (\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"forms\">\r\n              <img\r\n                className=\"cover_photo\"\r\n                src={uploaded ? values.image : results.image}\r\n                alt=\"No File\"\r\n              />\r\n              <br />\r\n              {/* Artist name */}\r\n              <input\r\n                className=\"artist_name_form\"\r\n                onBlur={handleBlur}\r\n                placeholder=\"Artist's name\"\r\n                type=\"text\"\r\n                id=\"artist\"\r\n                name=\"artist\"\r\n                value={values.artist}\r\n                onChange={handleChange}\r\n              />\r\n              <Error touched={touched.artist} message={errors.artist} />\r\n              <br />\r\n              <br />\r\n              <br />\r\n              {/* Title */}\r\n              <input\r\n                className=\"title_form\"\r\n                onBlur={handleBlur}\r\n                placeholder=\"Album's title\"\r\n                type=\"text\"\r\n                id=\"title\"\r\n                name=\"title\"\r\n                value={values.title}\r\n                onChange={handleChange}\r\n              />\r\n              <Error touched={touched.title} message={errors.title} />\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <br />\r\n              {/* Description */}\r\n              <textarea\r\n                name=\"description\"\r\n                id=\"description\"\r\n                placeholder=\"Album's description\"\r\n                onBlur={handleBlur}\r\n                value={values.description}\r\n                onChange={handleChange}\r\n              />\r\n              <Error\r\n                touched={touched.description}\r\n                message={errors.description}\r\n              />\r\n              <br />\r\n              {/* Year of release */}\r\n              <input\r\n                className=\"date_of_release\"\r\n                placeholder=\"Date of album's release\"\r\n                id=\"year\"\r\n                name=\"year\"\r\n                type=\"text\"\r\n                value={values.quantity}\r\n                onChange={handleChange}\r\n              />\r\n              <Error touched={touched.year} message={errors.year} />\r\n              {/* Submit button */}\r\n              <div className=\"submitbuttons\">\r\n                <button\r\n                  className=\"submitbutton\"\r\n                  onClick={() => history.push(\"/\")}\r\n                >\r\n                  <IoIosArrowBack className=\"backIcon\" />\r\n                </button>\r\n\r\n                <button\r\n                  className=\"submitbutton\"\r\n                  type=\"submit\"\r\n                  disabled={isSubmitting}\r\n                >\r\n                  <IoIosCheckmark className=\"submitIcon\" />\r\n                </button>\r\n              </div>\r\n              {/* Tracks */}\r\n              <button type=\"button\" onClick={() => setShowTracks(!showTracks)}>\r\n                Show Tracks\r\n              </button>\r\n              {showTracks ? (\r\n                <div className=\"tracks_div\">\r\n                  <label className=\"tracks_label\">Tracks: </label>\r\n                  <FieldArray\r\n                    id=\"tracks\"\r\n                    name=\"tracks\"\r\n                    type=\"text\"\r\n                    value={values.tracks}\r\n                    onChange={handleChange}\r\n                  >\r\n                    {({ push }) => (\r\n                      <div>\r\n                        <button\r\n                          className=\"addTrack_button\"\r\n                          type=\"reset\"\r\n                          onClick={() => push(values.track)}\r\n                        >\r\n                          Add\r\n                        </button>\r\n                        <input\r\n                          className=\"addTrack_form\"\r\n                          placeholder=\"Track's name\"\r\n                          type=\"text\"\r\n                          id=\"track\"\r\n                          name=\"track\"\r\n                          values={values.track}\r\n                          onChange={handleChange}\r\n                        />\r\n                      </div>\r\n                    )}\r\n                  </FieldArray>\r\n                  <Error touched={touched.tracks} message={errors.tracks} />\r\n                  <MapList id={UserId} />\r\n                </div>\r\n              ) : null}\r\n              ;{/* PHOTO */}\r\n              <>\r\n                <div>\r\n                  <input\r\n                    className=\"addPhoto_button\"\r\n                    type=\"file\"\r\n                    name=\"image\"\r\n                    id=\"image\"\r\n                    accept=\"image/*\"\r\n                    onChange={onchangeUpload}\r\n                  />\r\n                  {uploaded\r\n                    ? (values.image = \"/uploads/\" + filename)\r\n                    : (values.image = results.image)}\r\n                  <br />\r\n                  {values.image}\r\n                </div>\r\n              </>\r\n              <br />\r\n            </div>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\jolej\\\\Documents\\\\GitHub\\\\react_file_uploader\\\\client\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\jolej\\\\Documents\\\\GitHub\\\\react_file_uploader\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\jolej\\\\Documents\\\\GitHub\\\\react_file_uploader\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\jolej\\\\Documents\\\\GitHub\\\\react_file_uploader\\\\client\\\\src\\\\components\\\\FileUpload.js\";\nimport React, { Fragment, useState } from 'react';\nimport axios from 'axios';\n\nvar FileUpload = function FileUpload() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      file = _useState2[0],\n      setFile = _useState2[1];\n\n  var _useState3 = useState('Choose File'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      filename = _useState4[0],\n      setFilename = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      uploadedFile = _useState6[0],\n      setUploadedFile = _useState6[1];\n\n  var onChange = function onChange(e) {\n    setFile(e.target.files[0]);\n    setFilename(e.target.files[0].name);\n  };\n\n  var onSubmit =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(e) {\n      var formData, res, _res$data, fileName, filePath;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              formData = new FormData();\n              formData.append('file', file);\n              _context.prev = 3;\n              _context.next = 6;\n              return axios.post('/upload', formData, {\n                headers: {\n                  'Content-Type': 'multipart/form-data'\n                }\n              });\n\n            case 6:\n              res = _context.sent;\n              _res$data = res.data, fileName = _res$data.fileName, filePath = _res$data.filePath;\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](3);\n\n              if (_context.t0.response.status === 500) {\n                console.log('There was a problem with the server');\n              } else {\n                console.log(_context.t0.response.data.msg);\n              }\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[3, 10]]);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"file\",\n    id: \"customFile\",\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"customFile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, filename)), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Upload\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })));\n};\n\nexport default FileUpload;","map":{"version":3,"sources":["C:\\Users\\jolej\\Documents\\GitHub\\react_file_uploader\\client\\src\\components\\FileUpload.js"],"names":["React","Fragment","useState","axios","FileUpload","file","setFile","filename","setFilename","uploadedFile","setUploadedFile","onChange","e","target","files","name","onSubmit","preventDefault","formData","FormData","append","post","headers","res","data","fileName","filePath","response","status","console","log","msg"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAAA,kBACCF,QAAQ,CAAC,EAAD,CADT;AAAA;AAAA,MAChBG,IADgB;AAAA,MACVC,OADU;;AAAA,mBAESJ,QAAQ,CAAC,aAAD,CAFjB;AAAA;AAAA,MAEhBK,QAFgB;AAAA,MAENC,WAFM;;AAAA,mBAGiBN,QAAQ,CAAC,EAAD,CAHzB;AAAA;AAAA,MAGhBO,YAHgB;AAAA,MAGFC,eAHE;;AAKvB,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,CAAC,EAAI;AACpBN,IAAAA,OAAO,CAACM,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAD,CAAP;AACAN,IAAAA,WAAW,CAACI,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,EAAkBC,IAAnB,CAAX;AACD,GAHD;;AAKA,MAAMC,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAG,iBAAMJ,CAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AACfA,cAAAA,CAAC,CAACK,cAAF;AACMC,cAAAA,QAFS,GAEE,IAAIC,QAAJ,EAFF;AAGfD,cAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBf,IAAxB;AAHe;AAAA;AAAA,qBAMKF,KAAK,CAACkB,IAAN,CAAW,SAAX,EAAsBH,QAAtB,EAAgC;AAChDI,gBAAAA,OAAO,EAAE;AACP,kCAAgB;AADT;AADuC,eAAhC,CANL;;AAAA;AAMPC,cAAAA,GANO;AAAA,0BAYkBA,GAAG,CAACC,IAZtB,EAYLC,QAZK,aAYLA,QAZK,EAYKC,QAZL,aAYKA,QAZL;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAgBb,kBAAI,YAAIC,QAAJ,CAAaC,MAAb,KAAwB,GAA5B,EAAiC;AAC/BC,gBAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ;AACD,eAFD,MAEO;AACLD,gBAAAA,OAAO,CAACC,GAAR,CAAY,YAAIH,QAAJ,CAAaH,IAAb,CAAkBO,GAA9B;AACD;;AApBY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAARf,QAAQ;AAAA;AAAA;AAAA,KAAd;;AAwBA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,QAAQ,EAAEA,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,EAAE,EAAC,YAFL;AAGE,IAAA,QAAQ,EAAEL,QAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME;AAAO,IAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,QADH,CANF,CADF,EAYE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,KAAK,EAAC,QAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CADF,CADF;AAqBD,CAvDD;;AAyDA,eAAeH,UAAf","sourcesContent":["import React, { Fragment, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst FileUpload = () => {\r\n  const [file, setFile] = useState('');\r\n  const [filename, setFilename] = useState('Choose File');\r\n  const [uploadedFile, setUploadedFile] = useState({});\r\n\r\n  const onChange = e => {\r\n    setFile(e.target.files[0]);\r\n    setFilename(e.target.files[0].name);\r\n  };\r\n\r\n  const onSubmit = async e => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n\r\n    try {\r\n      const res = await axios.post('/upload', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      });\r\n\r\n      const { fileName, filePath } = res.data;\r\n\r\n\r\n    } catch (err) {\r\n      if (err.response.status === 500) {\r\n        console.log('There was a problem with the server');\r\n      } else {\r\n        console.log(err.response.data.msg);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <form onSubmit={onSubmit}>\r\n        <div>\r\n          <input\r\n            type='file'\r\n            id='customFile'\r\n            onChange={onChange}\r\n          />\r\n          <label htmlFor='customFile'>\r\n            {filename}\r\n          </label>\r\n        </div>\r\n\r\n        <input\r\n          type='submit'\r\n          value='Upload'\r\n        />\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default FileUpload;\r\n"]},"metadata":{},"sourceType":"module"}
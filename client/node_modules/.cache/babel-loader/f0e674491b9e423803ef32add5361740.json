{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jolej\\\\Documents\\\\GitHub\\\\album-shelf\\\\client\\\\src\\\\pages\\\\Forms\\\\AddForm.js\";\nimport React from \"react\";\nimport { Formik, FieldArray } from \"formik\";\nimport { validationSchema } from \"./helpers/validation\";\nimport { useHistory } from \"react-router-dom\";\nimport Error from \"./helpers/Error\";\nimport FileUpload from \"./helpers/FileUpload\";\nexport default function AddForm() {\n  var history = useHistory();\n\n  var _FileUpload = FileUpload(),\n      onSubmitUpload = _FileUpload.onSubmitUpload,\n      onchangeUpload = _FileUpload.onchangeUpload,\n      file = _FileUpload.file,\n      filename = _FileUpload.filename,\n      uploaded = _FileUpload.uploaded,\n      uploadedFile = _FileUpload.uploadedFile;\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Formik, {\n    initialValues: {\n      artist: \"\",\n      title: \"\",\n      description: \"\",\n      year: \"\",\n      image: \"\",\n      track: \"\",\n      tracks: []\n    },\n    validationSchema: validationSchema,\n    onSubmit: function onSubmit(values, _ref) {\n      var setSubmitting = _ref.setSubmitting;\n      setSubmitting(true);\n      fetch(\"http://localhost:3007/albums\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          artist: values.artist,\n          title: values.title,\n          description: values.description,\n          image: \"/uploads/\" + filename,\n          year: values.year,\n          tracks: values.tracks\n        })\n      });\n      onSubmitUpload();\n      history.push(\"/\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, function (_ref2) {\n    var values = _ref2.values,\n        errors = _ref2.errors,\n        touched = _ref2.touched,\n        handleChange = _ref2.handleChange,\n        handleBlur = _ref2.handleBlur,\n        handleSubmit = _ref2.handleSubmit,\n        isSubmitting = _ref2.isSubmitting;\n    return React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Artist: \"), React.createElement(\"input\", {\n      className: \"textinput\",\n      onBlur: handleBlur,\n      type: \"text\",\n      id: \"artist\",\n      name: \"artist\",\n      value: values.artist,\n      onChange: handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(Error, {\n      touched: touched.artist,\n      message: errors.artist,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Title: \"), React.createElement(\"input\", {\n      className: \"textinput\",\n      onBlur: handleBlur,\n      type: \"text\",\n      id: \"title\",\n      name: \"title\",\n      value: values.title,\n      onChange: handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(Error, {\n      touched: touched.title,\n      message: errors.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Description: \"), React.createElement(\"textarea\", {\n      name: \"description\",\n      id: \"description\",\n      onBlur: handleBlur,\n      value: values.description,\n      onChange: handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(Error, {\n      touched: touched.description,\n      message: errors.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Year: \"), React.createElement(\"input\", {\n      className: \"date_of_release\",\n      id: \"year\",\n      name: \"year\",\n      type: \"text\",\n      value: values.quantity,\n      onChange: handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(Error, {\n      touched: touched.year,\n      message: errors.year,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Tracks: \"), React.createElement(FieldArray, {\n      className: \"textinput\",\n      id: \"tracks\",\n      name: \"tracks\",\n      type: \"text\",\n      value: values.tracks,\n      onChange: handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, function (_ref3) {\n      var push = _ref3.push;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"addTrack_button\",\n        type: \"button\",\n        onClick: function onClick() {\n          return push(values.track);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"Add\"), React.createElement(\"input\", {\n        className: \"addTrack_form\",\n        type: \"text\",\n        id: \"track\",\n        name: \"track\",\n        values: values.track,\n        onChange: handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"ol\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, values.track))));\n    }), React.createElement(Error, {\n      touched: touched.tracks,\n      message: errors.tracks,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"addPhoto_button\",\n      type: \"file\",\n      name: \"image\",\n      id: \"image\",\n      accept: \"image/*\",\n      onChange: onchangeUpload,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }), uploaded ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"Cover uploaded!\") : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"Upload a Cover!\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"submitbutton\",\n      type: \"submit\",\n      disabled: isSubmitting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"Submit!\"), React.createElement(\"button\", {\n      className: \"submitbutton\",\n      onClick: function onClick() {\n        return history.push(\"/\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \" \", \"Go back!\", \" \")));\n  }));\n}","map":{"version":3,"sources":["C:/Users/jolej/Documents/GitHub/album-shelf/client/src/pages/Forms/AddForm.js"],"names":["React","Formik","FieldArray","validationSchema","useHistory","Error","FileUpload","AddForm","history","onSubmitUpload","onchangeUpload","file","filename","uploaded","uploadedFile","artist","title","description","year","image","track","tracks","values","setSubmitting","fetch","method","headers","Accept","body","JSON","stringify","push","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","quantity"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Formik, FieldArray } from \"formik\";\r\nimport { validationSchema } from \"./helpers/validation\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Error from \"./helpers/Error\";\r\nimport FileUpload from \"./helpers/FileUpload\";\r\n\r\nexport default function AddForm() {\r\n  const history = useHistory();\r\n\r\n  const {\r\n    onSubmitUpload,\r\n    onchangeUpload,\r\n    file,\r\n    filename,\r\n    uploaded,\r\n    uploadedFile\r\n  } = FileUpload();\r\n\r\n  return (\r\n    <div>\r\n      <Formik\r\n        initialValues={{\r\n          artist: \"\",\r\n          title: \"\",\r\n          description: \"\",\r\n          year: \"\",\r\n          image: \"\",\r\n          track: \"\",\r\n          tracks: []\r\n        }}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(values, { setSubmitting }) => {\r\n          setSubmitting(true);\r\n          fetch(\"http://localhost:3007/albums\", {\r\n            method: \"POST\",\r\n            headers: {\r\n              Accept: \"application/json\",\r\n              \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n              artist: values.artist,\r\n              title: values.title,\r\n              description: values.description,\r\n              image: \"/uploads/\" + filename,\r\n              year: values.year,\r\n              tracks: values.tracks\r\n            })\r\n          });\r\n          onSubmitUpload();\r\n          history.push(\"/\");\r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          isSubmitting\r\n        }) => (\r\n          <form onSubmit={handleSubmit}>\r\n            <div>\r\n              <br />\r\n\r\n              <label>Artist: </label>\r\n              <input\r\n                className=\"textinput\"\r\n                onBlur={handleBlur}\r\n                type=\"text\"\r\n                id=\"artist\"\r\n                name=\"artist\"\r\n                value={values.artist}\r\n                onChange={handleChange}\r\n              />\r\n              <Error touched={touched.artist} message={errors.artist} />\r\n\r\n              <br />\r\n\r\n              <label>Title: </label>\r\n              <input\r\n                className=\"textinput\"\r\n                onBlur={handleBlur}\r\n                type=\"text\"\r\n                id=\"title\"\r\n                name=\"title\"\r\n                value={values.title}\r\n                onChange={handleChange}\r\n              />\r\n              <Error touched={touched.title} message={errors.title} />\r\n\r\n              <br />\r\n\r\n              <label>Description: </label>\r\n              <textarea\r\n                name=\"description\"\r\n                id=\"description\"\r\n                onBlur={handleBlur}\r\n                value={values.description}\r\n                onChange={handleChange}\r\n              />\r\n              <Error\r\n                touched={touched.description}\r\n                message={errors.description}\r\n              />\r\n              <br />\r\n\r\n              <label>Year: </label>\r\n              <input\r\n                className=\"date_of_release\"\r\n                id=\"year\"\r\n                name=\"year\"\r\n                type=\"text\"\r\n                value={values.quantity}\r\n                onChange={handleChange}\r\n              />\r\n              <Error touched={touched.year} message={errors.year} />\r\n\r\n              <label>Tracks: </label>\r\n              <FieldArray\r\n                className=\"textinput\"\r\n                id=\"tracks\"\r\n                name=\"tracks\"\r\n                type=\"text\"\r\n                value={values.tracks}\r\n                onChange={handleChange}\r\n              >\r\n                {({ push }) => (\r\n                  <div>\r\n                    <button\r\n                      className=\"addTrack_button\"\r\n                      type=\"button\"\r\n                      onClick={() => push(values.track)}\r\n                    >\r\n                      Add\r\n                    </button>\r\n                    <input\r\n                      className=\"addTrack_form\"\r\n                      type=\"text\"\r\n                      id=\"track\"\r\n                      name=\"track\"\r\n                      values={values.track}\r\n                      onChange={handleChange}\r\n                    />\r\n                    <div>\r\n                      <ol>\r\n                        <li>{values.track}</li>\r\n                      </ol>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </FieldArray>\r\n              <Error touched={touched.tracks} message={errors.tracks} />\r\n\r\n              {/* PHOTO */}\r\n\r\n              <div>\r\n                <input\r\n                  className=\"addPhoto_button\"\r\n                  type=\"file\"\r\n                  name=\"image\"\r\n                  id=\"image\"\r\n                  accept=\"image/*\"\r\n                  onChange={onchangeUpload}\r\n                />\r\n                {uploaded ? (\r\n                  <div>Cover uploaded!</div>\r\n                ) : (\r\n                  <div>Upload a Cover!</div>\r\n                )}\r\n              </div>\r\n              <br />\r\n\r\n              <button\r\n                className=\"submitbutton\"\r\n                type=\"submit\"\r\n                disabled={isSubmitting}\r\n              >\r\n                Submit!\r\n              </button>\r\n\r\n              <button\r\n                className=\"submitbutton\"\r\n                onClick={() => history.push(\"/\")}\r\n              >\r\n                {\" \"}\r\n                Go back!{\" \"}\r\n              </button>\r\n            </div>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\jolej\\\\Documents\\\\GitHub\\\\album-shelf\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\jolej\\\\Documents\\\\GitHub\\\\album-shelf\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\n\nvar FileUpload = function FileUpload() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      file = _useState2[0],\n      setFile = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      filename = _useState4[0],\n      setFilename = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      uploadedFile = _useState6[0],\n      setUploadedFile = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      uploaded = _useState8[0],\n      setUploaded = _useState8[1];\n\n  var onchangeUpload = function onchangeUpload(e) {\n    var fileName = e.target.files[0].name;\n    var idxDot = fileName.lastIndexOf(\".\") + 1;\n    var extFile = fileName.substr(idxDot, fileName.length).toLowerCase();\n\n    if (extFile === \"jpg\" || extFile === \"jpeg\" || extFile === \"png\") {\n      setFile(e.target.files[0]);\n      setFilename(e.target.files[0].name.replace(/\\s/g, \"\"));\n      setUploaded(true);\n      console.log(filename);\n    } else {\n      alert(\"Only jpg/jpeg and png files are allowed!\");\n    }\n  };\n\n  var onSubmitUpload = function onSubmitUpload(e) {\n    var formData, res, _res$data, _filename, filePath;\n\n    return _regeneratorRuntime.async(function onSubmitUpload$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            formData = new FormData();\n            formData.append(\"file\", file);\n            _context.prev = 2;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(axios.post(\"/upload\", formData, {\n              headers: {\n                \"Content-Type\": \"multipart/form-data\"\n              }\n            }));\n\n          case 5:\n            res = _context.sent;\n            _res$data = res.data, _filename = _res$data.filename, filePath = _res$data.filePath;\n            setUploadedFile({\n              filename: _filename,\n              filePath: filePath\n            });\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](2);\n\n            if (_context.t0.response.status === 500) {\n              console.log(\"There was a problem with the server\");\n            } else {\n              console.log(_context.t0.response.data.msg);\n            }\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[2, 10]]);\n  };\n\n  return {\n    onSubmitUpload: onSubmitUpload,\n    onchangeUpload: onchangeUpload,\n    file: file,\n    filename: filename,\n    uploaded: uploaded,\n    uploadedFile: uploadedFile\n  };\n};\n\nexport default FileUpload;","map":{"version":3,"sources":["C:/Users/jolej/Documents/GitHub/album-shelf/client/src/pages/Forms/helpers/FileUpload.js"],"names":["useState","axios","FileUpload","file","setFile","filename","setFilename","uploadedFile","setUploadedFile","uploaded","setUploaded","onchangeUpload","e","fileName","target","files","name","idxDot","lastIndexOf","extFile","substr","length","toLowerCase","replace","console","log","alert","onSubmitUpload","formData","FormData","append","post","headers","res","data","filePath","response","status","msg"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst FileUpload = () => {\r\n  const [file, setFile] = useState(\"\");\r\n  const [filename, setFilename] = useState(\"\");\r\n  const [uploadedFile, setUploadedFile] = useState({});\r\n  const [uploaded, setUploaded] = useState(false);\r\n\r\n  const onchangeUpload = e => {\r\n\r\n    var fileName = e.target.files[0].name;\r\n    var idxDot = fileName.lastIndexOf(\".\") + 1;\r\n    var extFile = fileName.substr(idxDot, fileName.length).toLowerCase();\r\n    if (extFile === \"jpg\" || extFile === \"jpeg\" || extFile === \"png\") {\r\n      setFile(e.target.files[0]);\r\n      setFilename(e.target.files[0].name.replace(/\\s/g, \"\"));\r\n      setUploaded(true);\r\n      console.log(filename)\r\n    } else {\r\n      alert(\"Only jpg/jpeg and png files are allowed!\");\r\n    }\r\n  };\r\n\r\n  const onSubmitUpload = async e => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n\r\n    try {\r\n      const res = await axios.post(\"/upload\", formData, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\"\r\n        }\r\n      });\r\n\r\n      const { filename, filePath } = res.data;\r\n\r\n      setUploadedFile({ filename, filePath });\r\n    } catch (err) {\r\n      if (err.response.status === 500) {\r\n        console.log(\"There was a problem with the server\");\r\n      } else {\r\n        console.log(err.response.data.msg);\r\n      }\r\n    }\r\n  };\r\n\r\n  return {\r\n    onSubmitUpload,\r\n    onchangeUpload,\r\n    file,\r\n    filename,\r\n    uploaded,\r\n    uploadedFile\r\n  };\r\n};\r\n\r\nexport default FileUpload;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\jolej\\\\Documents\\\\GitHub\\\\react_file_uploader\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\jolej\\\\Documents\\\\GitHub\\\\react_file_uploader\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nvar FileUpload = function FileUpload() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      file = _useState2[0],\n      setFile = _useState2[1];\n\n  var _useState3 = useState('Choose File'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      filename = _useState4[0],\n      setFilename = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      uploadedFile = _useState6[0],\n      setUploadedFile = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      uploaded = _useState8[0],\n      setUploaded = _useState8[1];\n\n  var onchangeUpload = function onchangeUpload(e) {\n    setFile(e.target.files[0]);\n    setFilename(e.target.files[0].name.replace(/\\s/g, ''));\n    setUploaded(true);\n  };\n\n  var onSubmitUpload = function onSubmitUpload(e) {\n    var formData, res, _res$data, fileName, filePath;\n\n    return _regeneratorRuntime.async(function onSubmitUpload$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            formData = new FormData();\n            formData.append('file', file);\n            _context.prev = 2;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(axios.post('/upload', formData, {\n              headers: {\n                'Content-Type': 'multipart/form-data'\n              }\n            }));\n\n          case 5:\n            res = _context.sent;\n            _res$data = res.data, fileName = _res$data.fileName, filePath = _res$data.filePath;\n            setUploadedFile({\n              fileName: fileName,\n              filePath: filePath\n            });\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](2);\n\n            if (_context.t0.response.status === 500) {\n              console.log('There was a problem with the server');\n            } else {\n              console.log(_context.t0.response.data.msg);\n            }\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[2, 10]]);\n  };\n\n  return {\n    onSubmitUpload: onSubmitUpload,\n    onchangeUpload: onchangeUpload,\n    file: file,\n    filename: filename,\n    uploaded: uploaded,\n    uploadedFile: uploadedFile\n  };\n};\n\nexport default FileUpload;","map":{"version":3,"sources":["C:/Users/jolej/Documents/GitHub/react_file_uploader/client/src/pages/Forms/helpers/FileUpload.js"],"names":["React","useState","axios","FileUpload","file","setFile","filename","setFilename","uploadedFile","setUploadedFile","uploaded","setUploaded","onchangeUpload","e","target","files","name","replace","onSubmitUpload","formData","FormData","append","post","headers","res","data","fileName","filePath","response","status","console","log","msg"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAAA,kBACCF,QAAQ,CAAC,EAAD,CADT;AAAA;AAAA,MAChBG,IADgB;AAAA,MACVC,OADU;;AAAA,mBAESJ,QAAQ,CAAC,aAAD,CAFjB;AAAA;AAAA,MAEhBK,QAFgB;AAAA,MAENC,WAFM;;AAAA,mBAGiBN,QAAQ,CAAC,EAAD,CAHzB;AAAA;AAAA,MAGhBO,YAHgB;AAAA,MAGFC,eAHE;;AAAA,mBAISR,QAAQ,CAAC,KAAD,CAJjB;AAAA;AAAA,MAIhBS,QAJgB;AAAA,MAINC,WAJM;;AAMvB,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,CAAC,EAAI;AAC1BR,IAAAA,OAAO,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAD,CAAP;AACAR,IAAAA,WAAW,CAAEM,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,EAAkBC,IAAnB,CAAyBC,OAAzB,CAAiC,KAAjC,EAAwC,EAAxC,CAAD,CAAX;AACAN,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAJD;;AAMA,MAAMO,cAAc,GAAG,SAAjBA,cAAiB,CAAML,CAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AACfM,YAAAA,QADe,GACJ,IAAIC,QAAJ,EADI;AAErBD,YAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBjB,IAAxB;AAFqB;AAAA;AAAA,6CAKDF,KAAK,CAACoB,IAAN,CAAW,SAAX,EAAsBH,QAAtB,EAAgC;AAChDI,cAAAA,OAAO,EAAE;AACP,gCAAgB;AADT;AADuC,aAAhC,CALC;;AAAA;AAKbC,YAAAA,GALa;AAAA,wBAWYA,GAAG,CAACC,IAXhB,EAWXC,QAXW,aAWXA,QAXW,EAWDC,QAXC,aAWDA,QAXC;AAanBlB,YAAAA,eAAe,CAAC;AAAEiB,cAAAA,QAAQ,EAARA,QAAF;AAAYC,cAAAA,QAAQ,EAARA;AAAZ,aAAD,CAAf;AAbmB;AAAA;;AAAA;AAAA;AAAA;;AAgBnB,gBAAI,YAAIC,QAAJ,CAAaC,MAAb,KAAwB,GAA5B,EAAiC;AAC/BC,cAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ;AACD,aAFD,MAEO;AACLD,cAAAA,OAAO,CAACC,GAAR,CAAY,YAAIH,QAAJ,CAAaH,IAAb,CAAkBO,GAA9B;AACD;;AApBkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAwBA,SAAO;AAACd,IAAAA,cAAc,EAAdA,cAAD;AAAiBN,IAAAA,cAAc,EAAdA,cAAjB;AAAiCR,IAAAA,IAAI,EAAJA,IAAjC;AAAuCE,IAAAA,QAAQ,EAARA,QAAvC;AAAiDI,IAAAA,QAAQ,EAARA,QAAjD;AAA2DF,IAAAA,YAAY,EAAZA;AAA3D,GAAP;AACD,CArCD;;AAuCA,eAAeL,UAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst FileUpload = () => {\r\n  const [file, setFile] = useState('');\r\n  const [filename, setFilename] = useState('Choose File');\r\n  const [uploadedFile, setUploadedFile] = useState({});\r\n  const [uploaded, setUploaded] = useState(false)\r\n\r\n  const onchangeUpload = e => {\r\n    setFile(e.target.files[0]);\r\n    setFilename((e.target.files[0].name).replace(/\\s/g, ''));\r\n    setUploaded(true);\r\n  };\r\n\r\n  const onSubmitUpload = async e => {\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n\r\n    try {\r\n      const res = await axios.post('/upload', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        },\r\n      });\r\n\r\n      const { fileName, filePath } = res.data;\r\n\r\n      setUploadedFile({ fileName, filePath });\r\n\r\n    } catch (err) {\r\n      if (err.response.status === 500) {\r\n        console.log('There was a problem with the server');\r\n      } else {\r\n        console.log(err.response.data.msg);\r\n      }\r\n    }\r\n  };\r\n\r\n  return {onSubmitUpload, onchangeUpload, file, filename, uploaded, uploadedFile}\r\n};\r\n\r\nexport default FileUpload;\r\n"]},"metadata":{},"sourceType":"module"}
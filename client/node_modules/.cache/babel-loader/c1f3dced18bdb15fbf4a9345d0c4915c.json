{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jolej\\\\Documents\\\\GitHub\\\\react_file_uploader\\\\client\\\\src\\\\pages\\\\Forms\\\\AddForm.js\";\nimport React from \"react\";\nimport { Formik, FieldArray } from \"formik\";\nimport { validationSchema } from \"./validation\";\nimport { useHistory } from \"react-router-dom\";\nimport Error from \"./Error\";\nimport FileUpload from \"./FileUpload\";\nexport default function AddForm() {\n  var history = useHistory();\n\n  var _FileUpload = FileUpload(),\n      onSubmitUpload = _FileUpload.onSubmitUpload,\n      onchangeUpload = _FileUpload.onchangeUpload,\n      file = _FileUpload.file,\n      filename = _FileUpload.filename,\n      uploadedFile = _FileUpload.uploadedFile,\n      filePath = _FileUpload.filePath;\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(Formik, {\n    initialValues: {\n      artist: \"\",\n      title: \"\",\n      description: \"\",\n      year: \"\",\n      image: null,\n      track: \"\",\n      tracks: []\n    },\n    validationSchema: validationSchema,\n    onSubmit: function onSubmit(values, _ref) {\n      var setSubmitting = _ref.setSubmitting;\n      setSubmitting(true);\n      fetch(\"http://localhost:3007/albums\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          artist: values.artist,\n          title: values.title,\n          description: values.description,\n          // image: URL.createObjectURL(values.image),\n          year: values.year,\n          tracks: values.tracks\n        })\n      });\n      onSubmitUpload();\n      console.log(URL.createObjectURL(file));\n      history.push(\"/\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, function (_ref2) {\n    var values = _ref2.values,\n        errors = _ref2.errors,\n        touched = _ref2.touched,\n        handleChange = _ref2.handleChange,\n        handleBlur = _ref2.handleBlur,\n        handleSubmit = _ref2.handleSubmit,\n        isSubmitting = _ref2.isSubmitting;\n    return React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Artist: \"), React.createElement(\"input\", {\n      className: \"textinput\",\n      onBlur: handleBlur,\n      type: \"text\",\n      id: \"artist\",\n      name: \"artist\",\n      value: values.artist,\n      onChange: handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(Error, {\n      touched: touched.artist,\n      message: errors.artist,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Title: \"), React.createElement(\"input\", {\n      className: \"textinput\",\n      onBlur: handleBlur,\n      type: \"text\",\n      id: \"title\",\n      name: \"title\",\n      value: values.title,\n      onChange: handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(Error, {\n      touched: touched.title,\n      message: errors.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Description: \"), React.createElement(\"textarea\", {\n      name: \"description\",\n      id: \"description\",\n      onBlur: handleBlur,\n      value: values.description,\n      onChange: handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(Error, {\n      touched: touched.description,\n      message: errors.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Year: \"), React.createElement(\"input\", {\n      className: \"textinput\",\n      id: \"year\",\n      name: \"year\",\n      type: \"text\",\n      value: values.quantity,\n      onChange: handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(Error, {\n      touched: touched.year,\n      message: errors.year,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Tracks: \"), React.createElement(FieldArray, {\n      className: \"textinput\",\n      id: \"tracks\",\n      name: \"tracks\",\n      type: \"text\",\n      value: values.tracks,\n      onChange: handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, function (_ref3) {\n      var push = _ref3.push;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        onClick: function onClick() {\n          return push(values.track);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Add\"), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"track\",\n        name: \"track\",\n        values: values.track,\n        onChange: handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"ol\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, values.track))));\n    }), React.createElement(Error, {\n      touched: touched.tracks,\n      message: errors.tracks,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      id: \"customFile\",\n      onChange: onchangeUpload,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"customFile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, filename))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"submitbutton\",\n      type: \"submit\",\n      disabled: isSubmitting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Submit!\")));\n  }));\n}","map":{"version":3,"sources":["C:/Users/jolej/Documents/GitHub/react_file_uploader/client/src/pages/Forms/AddForm.js"],"names":["React","Formik","FieldArray","validationSchema","useHistory","Error","FileUpload","AddForm","history","onSubmitUpload","onchangeUpload","file","filename","uploadedFile","filePath","artist","title","description","year","image","track","tracks","values","setSubmitting","fetch","method","headers","Accept","body","JSON","stringify","console","log","URL","createObjectURL","push","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","quantity"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,UAAjB,QAAmC,QAAnC;AACA,SAASC,gBAAT,QAAiC,cAAjC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,eAAe,SAASC,OAAT,GAAmB;AAChC,MAAMC,OAAO,GAAGJ,UAAU,EAA1B;;AADgC,oBAGiDE,UAAU,EAH3D;AAAA,MAGzBG,cAHyB,eAGzBA,cAHyB;AAAA,MAGTC,cAHS,eAGTA,cAHS;AAAA,MAGOC,IAHP,eAGOA,IAHP;AAAA,MAGaC,QAHb,eAGaA,QAHb;AAAA,MAGuBC,YAHvB,eAGuBA,YAHvB;AAAA,MAGqCC,QAHrC,eAGqCA,QAHrC;;AAKhC,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,aAAa,EAAE;AACbC,MAAAA,MAAM,EAAE,EADK;AAEbC,MAAAA,KAAK,EAAE,EAFM;AAGbC,MAAAA,WAAW,EAAE,EAHA;AAIbC,MAAAA,IAAI,EAAE,EAJO;AAKbC,MAAAA,KAAK,EAAE,IALM;AAMbC,MAAAA,KAAK,EAAE,EANM;AAObC,MAAAA,MAAM,EAAE;AAPK,KADjB;AAUE,IAAA,gBAAgB,EAAElB,gBAVpB;AAWE,IAAA,QAAQ,EAAE,kBAACmB,MAAD,QAA+B;AAAA,UAApBC,aAAoB,QAApBA,aAAoB;AACvCA,MAAAA,aAAa,CAAC,IAAD,CAAb;AACAC,MAAAA,KAAK,CAAC,8BAAD,EAAiC;AACpCC,QAAAA,MAAM,EAAE,MAD4B;AAEpCC,QAAAA,OAAO,EAAE;AACPC,UAAAA,MAAM,EAAE,kBADD;AAEP,0BAAgB;AAFT,SAF2B;AAMpCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBf,UAAAA,MAAM,EAAEO,MAAM,CAACP,MADI;AAEnBC,UAAAA,KAAK,EAAEM,MAAM,CAACN,KAFK;AAGnBC,UAAAA,WAAW,EAAEK,MAAM,CAACL,WAHD;AAInB;AACAC,UAAAA,IAAI,EAAEI,MAAM,CAACJ,IALM;AAMnBG,UAAAA,MAAM,EAAEC,MAAM,CAACD;AANI,SAAf;AAN8B,OAAjC,CAAL;AAeAZ,MAAAA,cAAc;AACdsB,MAAAA,OAAO,CAACC,GAAR,CAAYC,GAAG,CAACC,eAAJ,CAAoBvB,IAApB,CAAZ;AACAH,MAAAA,OAAO,CAAC2B,IAAR,CAAa,GAAb;AACD,KA/BH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAiCG;AAAA,QACCb,MADD,SACCA,MADD;AAAA,QAECc,MAFD,SAECA,MAFD;AAAA,QAGCC,OAHD,SAGCA,OAHD;AAAA,QAICC,YAJD,SAICA,YAJD;AAAA,QAKCC,UALD,SAKCA,UALD;AAAA,QAMCC,YAND,SAMCA,YAND;AAAA,QAOCC,YAPD,SAOCA,YAPD;AAAA,WASC;AAAM,MAAA,QAAQ,EAAED,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,EAIE;AACE,MAAA,SAAS,EAAC,WADZ;AAEE,MAAA,MAAM,EAAED,UAFV;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,EAAE,EAAC,QAJL;AAKE,MAAA,IAAI,EAAC,QALP;AAME,MAAA,KAAK,EAAEjB,MAAM,CAACP,MANhB;AAOE,MAAA,QAAQ,EAAEuB,YAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAaE,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAED,OAAO,CAACtB,MAAxB;AAAgC,MAAA,OAAO,EAAEqB,MAAM,CAACrB,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfF,EAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAjBF,EAkBE;AACE,MAAA,SAAS,EAAC,WADZ;AAEE,MAAA,MAAM,EAAEwB,UAFV;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,EAAE,EAAC,OAJL;AAKE,MAAA,IAAI,EAAC,OALP;AAME,MAAA,KAAK,EAAEjB,MAAM,CAACN,KANhB;AAOE,MAAA,QAAQ,EAAEsB,YAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBF,EA2BE,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAED,OAAO,CAACrB,KAAxB;AAA+B,MAAA,OAAO,EAAEoB,MAAM,CAACpB,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3BF,EA6BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA7BF,EA+BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBA/BF,EAgCE;AACE,MAAA,IAAI,EAAC,aADP;AAEE,MAAA,EAAE,EAAC,aAFL;AAGE,MAAA,MAAM,EAAEuB,UAHV;AAIE,MAAA,KAAK,EAAEjB,MAAM,CAACL,WAJhB;AAKE,MAAA,QAAQ,EAAEqB,YALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhCF,EAuCE,oBAAC,KAAD;AACE,MAAA,OAAO,EAAED,OAAO,CAACpB,WADnB;AAEE,MAAA,OAAO,EAAEmB,MAAM,CAACnB,WAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvCF,EA2CE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3CF,EA6CE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA7CF,EA8CE;AACE,MAAA,SAAS,EAAC,WADZ;AAEE,MAAA,EAAE,EAAC,MAFL;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,IAAI,EAAC,MAJP;AAKE,MAAA,KAAK,EAAEK,MAAM,CAACoB,QALhB;AAME,MAAA,QAAQ,EAAEJ,YANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA9CF,EAsDE,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAED,OAAO,CAACnB,IAAxB;AAA8B,MAAA,OAAO,EAAEkB,MAAM,CAAClB,IAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtDF,EAwDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAxDF,EAyDE,oBAAC,UAAD;AACE,MAAA,SAAS,EAAC,WADZ;AAEE,MAAA,EAAE,EAAC,QAFL;AAGE,MAAA,IAAI,EAAC,QAHP;AAIE,MAAA,IAAI,EAAC,MAJP;AAKE,MAAA,KAAK,EAAEI,MAAM,CAACD,MALhB;AAME,MAAA,QAAQ,EAAEiB,YANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQG;AAAA,UAAGH,IAAH,SAAGA,IAAH;AAAA,aACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE;AAAA,iBAAMA,IAAI,CAACb,MAAM,CAACF,KAAR,CAAV;AAAA,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAIE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,EAAE,EAAC,OAFL;AAGE,QAAA,IAAI,EAAC,OAHP;AAIE,QAAA,MAAM,EAAEE,MAAM,CAACF,KAJjB;AAKE,QAAA,QAAQ,EAAEkB,YALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKhB,MAAM,CAACF,KAAZ,CADF,CADF,CAXF,CADD;AAAA,KARH,CAzDF,EAqFE,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAEiB,OAAO,CAAChB,MAAxB;AAAgC,MAAA,OAAO,EAAEe,MAAM,CAACf,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArFF,EAyFE,0CAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,YAAtB;AAAmC,MAAA,QAAQ,EAAEX,cAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAO,MAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6BE,QAA7B,CAFF,CAFJ,CAzFF,EAiGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjGF,EAmGE;AACE,MAAA,SAAS,EAAC,cADZ;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,QAAQ,EAAE6B,YAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAnGF,CADF,CATD;AAAA,GAjCH,CADF,CADF;AA+JD","sourcesContent":["import React from \"react\";\r\nimport { Formik, FieldArray } from \"formik\";\r\nimport { validationSchema } from \"./validation\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Error from \"./Error\";\r\nimport FileUpload from \"./FileUpload\";\r\n\r\nexport default function AddForm() {\r\n  const history = useHistory();\r\n\r\n  const {onSubmitUpload, onchangeUpload, file, filename, uploadedFile, filePath} = FileUpload();\r\n\r\n  return (\r\n    <div>\r\n      <Formik\r\n        initialValues={{\r\n          artist: \"\",\r\n          title: \"\",\r\n          description: \"\",\r\n          year: \"\",\r\n          image: null,\r\n          track: \"\",\r\n          tracks: []\r\n        }}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(values, { setSubmitting }) => {\r\n          setSubmitting(true);\r\n          fetch(\"http://localhost:3007/albums\", {\r\n            method: \"POST\",\r\n            headers: {\r\n              Accept: \"application/json\",\r\n              \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n              artist: values.artist,\r\n              title: values.title,\r\n              description: values.description,\r\n              // image: URL.createObjectURL(values.image),\r\n              year: values.year,\r\n              tracks: values.tracks\r\n            })\r\n          });\r\n          onSubmitUpload();\r\n          console.log(URL.createObjectURL(file))\r\n          history.push(\"/\");\r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          isSubmitting\r\n        }) => (\r\n          <form onSubmit={handleSubmit}>\r\n            <div>\r\n              <br />\r\n\r\n              <label>Artist: </label>\r\n              <input\r\n                className=\"textinput\"\r\n                onBlur={handleBlur}\r\n                type=\"text\"\r\n                id=\"artist\"\r\n                name=\"artist\"\r\n                value={values.artist}\r\n                onChange={handleChange}\r\n              />\r\n              <Error touched={touched.artist} message={errors.artist} />\r\n\r\n              <br />\r\n\r\n              <label>Title: </label>\r\n              <input\r\n                className=\"textinput\"\r\n                onBlur={handleBlur}\r\n                type=\"text\"\r\n                id=\"title\"\r\n                name=\"title\"\r\n                value={values.title}\r\n                onChange={handleChange}\r\n              />\r\n              <Error touched={touched.title} message={errors.title} />\r\n\r\n              <br />\r\n\r\n              <label>Description: </label>\r\n              <textarea\r\n                name=\"description\"\r\n                id=\"description\"\r\n                onBlur={handleBlur}\r\n                value={values.description}\r\n                onChange={handleChange}\r\n              />\r\n              <Error\r\n                touched={touched.description}\r\n                message={errors.description}\r\n              />\r\n              <br />\r\n\r\n              <label>Year: </label>\r\n              <input\r\n                className=\"textinput\"\r\n                id=\"year\"\r\n                name=\"year\"\r\n                type=\"text\"\r\n                value={values.quantity}\r\n                onChange={handleChange}\r\n              />\r\n              <Error touched={touched.year} message={errors.year} />\r\n\r\n              <label>Tracks: </label>\r\n              <FieldArray\r\n                className=\"textinput\"\r\n                id=\"tracks\"\r\n                name=\"tracks\"\r\n                type=\"text\"\r\n                value={values.tracks}\r\n                onChange={handleChange}\r\n              >\r\n                {({ push }) => (\r\n                  <div>\r\n                    <button type=\"button\" onClick={() => push(values.track)}>\r\n                      Add\r\n                    </button>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"track\"\r\n                      name=\"track\"\r\n                      values={values.track}\r\n                      onChange={handleChange}\r\n                    />\r\n                    <div>\r\n                      <ol>\r\n                        <li>{values.track}</li>\r\n                      </ol>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </FieldArray>\r\n              <Error touched={touched.tracks} message={errors.tracks} />\r\n\r\n              {/* PHOTO */}\r\n\r\n              <>\r\n      \r\n                  <div>\r\n                    <input type=\"file\" id=\"customFile\" onChange={onchangeUpload} />\r\n                    <label htmlFor=\"customFile\">{filename}</label>\r\n                  </div>\r\n\r\n              </>\r\n              <br />\r\n\r\n              <button\r\n                className=\"submitbutton\"\r\n                type=\"submit\"\r\n                disabled={isSubmitting}\r\n              >\r\n                Submit!\r\n              </button>\r\n\r\n              {/* <button className='submitbutton' onClick={<Redirect to='/' />}> Go back! </button> */}\r\n            </div>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}